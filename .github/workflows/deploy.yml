# .github/workflows/deploy.yaml nodejs app
name: CI - Build Test and SCAN
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    steps:

      - uses: actions/checkout@v2
      - name: Use Node.js 13.12
        id: setup_NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 13.12
      - name: npm Install
        id: npm_install
        run: npm install
     # - run: yarn add --dev jest-junit
      - name: npm Build
        id: npm_build
        run: npm run build --if-present
      - name: npm Test
        id: npm_test
        run: npm test
        continue-on-error: true

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results Splunk
          path: jest-junit.xml
      - name: Upload Code Coverage Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Code Coverage Splunk
          path: coverage/coverage-summary.json   
#       - name: Download Artifacts
#         if: always()
#         uses: actions/download-artifact@v2
#         with:
#           path: artifacts
 
  lint:            
    name: "Linting"
    needs: build
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - run: npm install
      - run: npm run lint   
        continue-on-error: true 
      - name: Upload Lint Report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ESLint Results Splunk
          path: lint-result.json

  Polaris-scan:
    name: "Polaris Scan"
    needs: build
    runs-on: ubuntu-latest
    # the build-and-test job might be skipped, we don't need to run this job then
    if: success() || failure()
    steps:        
      - uses: actions/checkout@v2       
      - name: Static Analysis with Polaris
        shell : bash 
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export POLARIS_SERVER_URL=${{ secrets.POLARIS_SERVER_URL}}
          export POLARIS_ACCESS_TOKEN=${{ secrets.POLARIS_ACCESS_TOKEN}}
          wget -q https://ikea.polaris.synopsys.com/api/tools/polaris_cli-linux64.zip
          unzip -j polaris_cli-linux64.zip -d /tmp
          mkdir /tmp/output
          /tmp/polaris -c polaris.yml analyze -w --coverity-ignore-capture-failure | tee /tmp/output/polaris-output.txt

      - name: Polaris SAST Report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Polaris SAST Results Splunk =="${{ github.head_ref }}-${{ github.sha }}-${{ github. run\_id }}"
          path: /tmp/output/polaris-output.txt
          
  Blackduck-SCA:
    name: "Blackduck SCA"
    needs: build
    runs-on: ubuntu-16.04
    # the build-and-test job might be skipped, we don't need to run this job then
    if: success() || failure()
    steps:        
      - uses: actions/checkout@v2
      - run: npm install
      - name: Software Composition Analysis with Black Duck
        uses: blackducksoftware/github-action@v2
        with:
          args: '--blackduck.url="${{ secrets.BLACKDUCK_URL}}" --blackduck.api.token="${{ secrets.BLACKDUCK_API_TOKEN}}" --detect.tools="DETECTOR" --logging.level.com.synopsys.integration="DEBUG"'
        
#   Splunk-Report:
#     name: "Splunk Reporting"
#     needs: [Polaris-scan,Blackduck-SCA,lint]
#     runs-on: ubuntu-latest
#     if: always()
#     steps:
#       - uses: actions/checkout@v2
#       - name: Download Artifacts
#         if: always()
#         uses: actions/download-artifact@v2
#         with:
#           path: artifacts
#       - uses: ./splunk_action/
#         with:
#           # CONCLUSION: ${{ needs.deploy.result }}
#           GITHUB_API_KEY: ${{ github.token }}
#           JUNIT_REPORT: jest-junit.xml
#           # SPLUNK_API_KEY: ${{ secrets.SPLUNK_API_KEY }}
